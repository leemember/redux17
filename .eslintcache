[{"D:\\study\\_hyunject\\2020\\redux17\\src\\index.js":"1","D:\\study\\_hyunject\\2020\\redux17\\src\\App.js":"2","D:\\study\\_hyunject\\2020\\redux17\\src\\components\\Counter.js":"3","D:\\study\\_hyunject\\2020\\redux17\\src\\components\\Todos.js":"4","D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\index.js":"5","D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\counter.js":"6","D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\todos.js":"7","D:\\study\\_hyunject\\2020\\redux17\\src\\containers\\CounterContainer.js":"8","D:\\study\\_hyunject\\2020\\redux17\\src\\containers\\TodosContainer.js":"9","D:\\study\\_hyunject\\2020\\redux17\\src\\lib\\useActions.js":"10"},{"size":547,"mtime":1608946052472,"results":"11","hashOfConfig":"12"},{"size":333,"mtime":1608944400697,"results":"13","hashOfConfig":"12"},{"size":355,"mtime":1608937413850,"results":"14","hashOfConfig":"12"},{"size":1663,"mtime":1608946627500,"results":"15","hashOfConfig":"12"},{"size":209,"mtime":1608941180804,"results":"16","hashOfConfig":"12"},{"size":1478,"mtime":1608947285409,"results":"17","hashOfConfig":"12"},{"size":4889,"mtime":1608963335022,"results":"18","hashOfConfig":"12"},{"size":2810,"mtime":1608950209949,"results":"19","hashOfConfig":"12"},{"size":1855,"mtime":1608963179356,"results":"20","hashOfConfig":"12"},{"size":509,"mtime":1608951951060,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1o4fifp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"D:\\study\\_hyunject\\2020\\redux17\\src\\index.js",[],["45","46"],"D:\\study\\_hyunject\\2020\\redux17\\src\\App.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\components\\Counter.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\components\\Todos.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\index.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\counter.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\modules\\todos.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\containers\\CounterContainer.js",[],"D:\\study\\_hyunject\\2020\\redux17\\src\\containers\\TodosContainer.js",["47","48","49","50"],"import React from 'react';\r\n// import { connect, useSelector } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { changeInput, insert, toggle, remove } from '../modules/todos';\r\nimport Todos from '../components/Todos';\r\n// import { useSelector, useDispatch} from 'react-redux';\r\nimport useActions from '../lib/useActions';\r\n\r\n\r\n// // TodosContainer 컴포넌트\r\n// const TodosContainer = ({\r\n//     input,\r\n//     todos,\r\n//     changeInput,\r\n//     insert,\r\n//     toggle,\r\n//     remove,\r\n// }) => {\r\n//     return (\r\n//         <Todos\r\n//         input={input}\r\n//         todos={todos}\r\n//         onChangeInput={changeInput}\r\n//         onInsert={insert}\r\n//         onToggle={toggle}\r\n//         onRemove={remove}\r\n//         />\r\n//     )\r\n// }\r\n\r\n// export default connect(\r\n//     //비구조화 할당을 통해 todos 분리\r\n//     // state.todos.input 대신 todos.input 사용\r\n\r\n//     ({ todos }) => ({\r\n//         input: todos.input,\r\n//         todos: todos.todos,\r\n//     }),\r\n//     {\r\n//         changeInput,\r\n//         insert,\r\n//         toggle,\r\n//         remove\r\n//     },\r\n// )(TodosContainer);\r\n\r\n\r\n// 😎 훅함수 이용 하는 방법😎\r\n// lib/useAction에 useActions 유틸 훅 만들어 간편하게 사용.\r\n\r\nconst TodosContainer = () => {\r\n    const { input, todos } = useSelector(({todos}) => ({\r\n        input: todos.input,\r\n        todos: todos.todo\r\n    }));\r\n\r\n    const [onChangeInput, onInsert, onToggle, onRemove ] = useActions(\r\n        [changeInput, insert, toggle, remove],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <Todos \r\n            input={input}\r\n            todos={todos}\r\n            onChangeInput={changeInput}\r\n            onInsert={insert}\r\n            onToggle={toggle}\r\n            onRemove={remove}\r\n        />\r\n    )\r\n}\r\n\r\nexport default React.memo(TodosContainer);","D:\\study\\_hyunject\\2020\\redux17\\src\\lib\\useActions.js",["51","52"],"import { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMemo } from 'react';\r\n\r\nexport default function useActions(actions, deps) {\r\n    const dispatch = useDispatch();\r\n    return useMemo(\r\n        () => {\r\n            if (Array.isArray(actions)) {\r\n                return actions.map(a => bindActionCreators(a, dispatch));\r\n            }\r\n            return bindActionCreators(actions, dispatch);\r\n        },\r\n        deps ? [dispatch, ...deps] : deps\r\n    );\r\n}",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":57,"column":12,"nodeType":"59","messageId":"60","endLine":57,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":57,"column":27,"nodeType":"59","messageId":"60","endLine":57,"endColumn":35},{"ruleId":"57","severity":1,"message":"62","line":57,"column":37,"nodeType":"59","messageId":"60","endLine":57,"endColumn":45},{"ruleId":"57","severity":1,"message":"63","line":57,"column":47,"nodeType":"59","messageId":"60","endLine":57,"endColumn":55},{"ruleId":"64","severity":1,"message":"65","line":14,"column":9,"nodeType":"66","endLine":14,"endColumn":42},{"ruleId":"64","severity":1,"message":"67","line":14,"column":9,"nodeType":"66","endLine":14,"endColumn":42,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'onChangeInput' is assigned a value but never used.","Identifier","unusedVar","'onInsert' is assigned a value but never used.","'onToggle' is assigned a value but never used.","'onRemove' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ConditionalExpression","React Hook useMemo has missing dependencies: 'actions' and 'dispatch'. Either include them or remove the dependency array.",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [actions, dispatch]",{"range":"74","text":"75"},[465,498],"[actions, dispatch]"]